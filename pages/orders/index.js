import {makeStyles} from '@material-ui/core/styles';
import Head from 'next/head';
import {
  Table,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  TableBody,
  TablePagination,
} from '@material-ui/core';
import {useState} from 'react';
import Link from 'next/link';

import {Footer} from '../../components/Layout/Footer';
import {Header} from '../../components/Layout/Header';
import {Block} from '../../components/MyPage/Block';

const useStyles = makeStyles((theme) => ({
  containerTable: {
    padding: '2.5rem 1.875rem',
    color: theme.palette.black.default,
    '& .MuiTableRow-head': {
      background: '#E5E5E5',
      height: '3.875rem',
      '& .MuiTableCell-root': {
        fontWeight: 'bold',
        color: theme.palette.black.default,
      },
    },
    '& tbody': {
      background: '#F2F2F2',
      height: '8.375rem',
      color: theme.palette.black.default,
    },
    '& .MuiTableCell-root': {
      border: '2px solid #D8D8D8',
      textAlign: 'center',
      fontSize: '1.125rem',
    },
    '& a': {
      color: theme.palette.black.default,
    },
  },
}));

const headCells = [
  'ご注文番号',
  'ご注文日時',
  '決済金額',
  'お支払い方法',
];

const rows = [
  {
    id: 1234567890,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567891,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567892,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567893,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567894,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567895,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567896,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567897,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567898,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567899,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567900,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
  {
    id: 1234567901,
    dateTime: '2021/01/01 01:30',
    price: 3000,
    paymentMethod: 'クレジットカード',
  },
];

const Orders = () => {
  const classes = useStyles();
  const [page, setPage] = useState(0);
  const currency = new Intl.NumberFormat('ja-JP', {style: 'currency', currency: 'JPY'});

  const handleChangePage = (e, newPage) => {
    setPage(newPage);
  };

  return (
    <div className={'page'}>
      <Head>
        <title>{'Orders - BH_EC'}</title>

        <meta
          name='description'
          content='Generated by NextJs'
        />
      </Head>

      <Header showMainMenu={false}/>

      <div className='content'>
        <Block title={'注文一覧'}>
          <TableContainer className={classes.containerTable}>
            <Table
              className={classes.table}
            >
              <TableHead>
                <TableRow>
                  {headCells.map((headCell) => (
                    <TableCell
                      key={headCell}
                    >
                      {headCell}
                    </TableCell>
                  ))}
                </TableRow>
              </TableHead>

              <TableBody>
                {rows.slice(page * 10, 10 * (page + 1)).map((row) => (
                  <TableRow key={row.id}>
                    <TableCell>
                      <Link href={`/order/${row.id}`}><a>{row.id}</a></Link>
                    </TableCell>
                    <TableCell>{row.dateTime}</TableCell>
                    <TableCell>{currency.format(row.price)}</TableCell>
                    <TableCell>{row.paymentMethod}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
            {rows.length > 10 &&
            <TablePagination
              rowsPerPageOptions={[]}
              component='div'
              count={rows.length}
              rowsPerPage={10}
              page={page}
              onChangePage={handleChangePage}
            />
            }
          </TableContainer>
        </Block>
      </div>

      <Footer/>
    </div>
  );
};

export default Orders;
